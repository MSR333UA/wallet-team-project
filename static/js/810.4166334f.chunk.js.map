{"version":3,"file":"static/js/810.4166334f.chunk.js","mappings":"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","sources":["components/LoginForm/Form.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport loginBgImgTab from '../../img/background/loginBgImgTab.png';\nimport loginBgImgTabLarge from '../../img/background/loginBgImgTab@2x.png';\nimport loginBgImgDesk from '../../img/background/loginBgImgDesk.png';\nimport loginBgImgDeskLarge from '../../img/background/loginBgImgDesk@2x.png';\nimport registerBgImgTab from '../../img/background/registerBgImgTab.png';\nimport registerBgImgTabLarge from '../../img/background/registerBgImgTab@2x.png';\nimport registerBgImgDesk from '../../img/background/registerBgImgDesk.png';\nimport registerBgImgDeskLarge from '../../img/background/registerBgImgDesk@2x.png';\n\nexport const Page = styled.div`\n  @media screen and (max-width: 767px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 100vh;\n    background-color: #ffffff;\n  }\n`;\n\nexport const CustomizedLoginPage = styled(Page)`\n  @media screen and (min-width: 768px) {\n    padding-top: 360px;\n    padding-bottom: 196px;\n    ::before {\n      content: '';\n      position: absolute;\n      top: 60px;\n      left: 114px;\n      z-index: -20;\n      display: block;\n      width: 260px;\n      height: 250px;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n      background-image: url(${loginBgImgTab});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgTabLarge});\n      }\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 136px;\n    padding-bottom: 116px;\n    ::before {\n      top: 150px;\n      left: 76px;\n      width: 435px;\n      height: 420px;\n      background-image: url(${loginBgImgDesk});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${loginBgImgDeskLarge});\n      }\n    }\n    ::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: 0;\n      z-index: -25;\n      display: block;\n      width: 57%;\n      height: 100vh;\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n      background-image: linear-gradient(\n        to bottom,\n        rgba(255, 255, 255, 0.4),\n        rgba(255, 255, 255, 0.4)\n      );\n      backdrop-filter: blur(25px);\n    }\n  }\n`;\n\nexport const CustomizedRegisterPage = styled(CustomizedLoginPage)`\n  @media screen and (min-width: 768px) {\n    padding-bottom: 48px;\n    ::before {\n      width: 274px;\n      background-image: url(${registerBgImgTab});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${registerBgImgTabLarge});\n      }\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 52px;\n    padding-bottom: 52px;\n    ::before {\n      top: 153px;\n      left: 66px;\n      width: 452px;\n      height: 413px;\n      background-image: url(${registerBgImgDesk});\n      // retina screen\n      @media (min-device-pixel-ratio: 2),\n        (min-resolution: 192dpi),\n        (min-resolution: 2dppx) {\n        background-image: url(${registerBgImgDeskLarge});\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  z-index: -10;\n  font-weight: 400;\n  font-size: 30px;\n  line-height: calc(45 / 30);\n  color: #000000;\n  @media screen and (max-width: 1279px) {\n    top: 163px;\n    right: 153px;\n  }\n  @media screen and (min-width: 1280px) {\n    top: 598px;\n    left: 200px;\n  }\n`;\n\nexport const HeaderLogo = styled.header`\n  a {\n    justify-content: center;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media screen and (min-width: 768px) {\n    width: 533px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 40px 58.5px 62px 65px;\n    border-radius: 20px;\n    background-color: #ffffff;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-right: 91px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 60px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 8px;\n    left: 12.5px;\n    width: 24px;\n    height: 24px;\n    fill: #24cca7;\n  }\n  div {\n    position: absolute;\n    top: 48px;\n    left: 0;\n    width: 100%;\n    height: 0;\n    border: 4px solid #e5f1ef;\n    border-radius: 8px;\n  }\n  span {\n    position: absolute;\n    top: -4px;\n    left: -4px;\n    display: block;\n    width: ${p => (p.length < 13 ? (p.length / 12) * 102 : 102)}%;\n    height: 0;\n    border: 4px solid ${p => (!p.error ? '#24CCA7' : '#ff6596')};\n    border-radius: 8px;\n    box-shadow: 0px 1px 8px rgba(36, 204, 167, 0.5);\n  }\n  p {\n    position: absolute;\n    top: 4px;\n    left: 0;\n    margin: 0;\n    font-size: 10px;\n    line-height: calc(27 / 18);\n    color: #ff6596;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 8px 8px 8px 54.5px;\n  border: none;\n  border-bottom: 1px solid #e0e0e0;\n  font-size: 18px;\n  line-height: calc(27 / 18);\n  ::placeholder {\n    color: #bdbdbd;\n  }\n`;\n\nexport const FormButton = styled.button`\n  padding: 13px;\n  background: #24cca7;\n  border: 1px solid transparent;\n  border-radius: 20px;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: calc(27 / 18);\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #ffffff;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0px 6px 15px #24cca7;\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const FormLink = styled(Link)`\n  display: block;\n  padding: 13px;\n  /* background-color: #24cca7; */\n  border: 1px solid #4a56e2;\n  border-radius: 20px;\n  font-size: 18px;\n  line-height: calc(27 / 18);\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  text-decoration: none;\n  color: #4a56e2;\n  transition: all 0.3s;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0px 6px 15px #4a56e2;\n  }\n  @media screen and (min-width: 768px) {\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { register } from 'redux/auth/authOperations';\nimport { Container } from 'stylesheet/baseStyle';\nimport Logo from 'components/Logo/Logo';\nimport {\n  Form,\n  FormButton,\n  FormLink,\n  HeaderLogo,\n  Input,\n  Label,\n  Wrapper,\n} from '../LoginForm/Form.styled';\nimport { IoMdMail } from 'react-icons/io';\nimport { MdLock } from 'react-icons/md';\nimport { IoPersonSharp } from 'react-icons/io5';\nimport { routes } from 'service/routes';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n\n  const validationSchema = yup.object({\n    email: yup\n      .string('Please, enter your e-mail')\n      .email('Please, enter a valid e-mail')\n      .required('E-mail is required'),\n    password: yup\n      .string('Please, enter your password')\n      .min(6, 'Password must contain at least 6 symbols')\n      .max(12, 'Password must contain no more than 12 symbols')\n      .required('Password is required'),\n    confirmPassword: yup\n      .string('Please, confirm your password')\n      .oneOf(\n        [yup.ref('password')],\n        'Entered password doesn`t match the previous one'\n      )\n      .required('Password is required'),\n    username: yup\n      .string('Please, enter your name')\n      .min(1, 'Name must contain at least 1 symbol')\n      .max(12, 'Name must contain no more than 12 symbols')\n      .required('Name is required'),\n  });\n\n  const { handleSubmit, values, handleChange, errors, resetForm } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      username: '',\n    },\n    validationSchema,\n    onSubmit: ({ username, email, password }) => {\n      dispatch(register({ username, email, password }));\n      resetForm();\n    },\n  });\n\n  return (\n    <Container>\n      <Wrapper>\n        <HeaderLogo>\n          <Logo />\n        </HeaderLogo>\n\n        <section>\n          <Form onSubmit={handleSubmit}>\n            <Label value={values.email} error={errors.email}>\n              <IoMdMail />\n              <Input\n                type=\"text\"\n                name=\"email\"\n                value={values.email}\n                placeholder=\"E-mail\"\n                onChange={handleChange}\n                required\n              />\n            </Label>\n\n            <Label\n              value={values.password}\n              error={errors.password}\n              length={values.password.length}\n            >\n              <MdLock />\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={values.password}\n                placeholder=\"Password\"\n                onChange={handleChange}\n                required\n              />\n            </Label>\n\n            <Label\n              value={values.confirmPassword}\n              error={errors.confirmPassword}\n              length={values.confirmPassword.length}\n            >\n              <MdLock />\n              <Input\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={values.confirmPassword}\n                placeholder=\"Confirm password\"\n                onChange={handleChange}\n                required\n              />\n              {values.confirmPassword.length > 0 && (\n                <div>\n                  <span></span>\n                  {errors.confirmPassword && <p>{errors.confirmPassword}</p>}\n                </div>\n              )}\n            </Label>\n\n            <Label value={values.username} error={errors.username}>\n              <IoPersonSharp />\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={values.username}\n                placeholder=\"First name\"\n                onChange={handleChange}\n                required\n              />\n            </Label>\n            <FormButton primary type=\"submit\">\n              Register\n            </FormButton>\n          </Form>\n\n          <FormLink to={routes.LOGIN}>Log in</FormLink>\n        </section>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { useMedia } from 'react-use';\nimport { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\nimport {\n  CustomizedRegisterPage,\n  Title,\n} from 'components/LoginForm/Form.styled';\n\nexport const RegisterPage = () => {\n  const isMobile = useMedia('(max-width: 767px)');\n\n  return (\n    <CustomizedRegisterPage>\n      {!isMobile && <Title>Finance App</Title>}\n      <RegistrationForm />\n    </CustomizedRegisterPage>\n  );\n};\n"],"names":["Page","styled","CustomizedLoginPage","loginBgImgTab","loginBgImgTabLarge","loginBgImgDesk","loginBgImgDeskLarge","CustomizedRegisterPage","registerBgImgTab","registerBgImgTabLarge","registerBgImgDesk","registerBgImgDeskLarge","Title","HeaderLogo","Wrapper","Form","Label","p","length","error","Input","FormButton","FormLink","Link","RegistrationForm","dispatch","useDispatch","validationSchema","yup","email","required","password","min","max","confirmPassword","oneOf","username","useFormik","initialValues","onSubmit","register","resetForm","handleSubmit","values","handleChange","errors","Logo","value","type","name","placeholder","onChange","primary","to","routes","RegisterPage","isMobile","useMedia"],"sourceRoot":""}